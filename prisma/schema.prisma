// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  // User details
  id           String        @id
  email        String        @unique
  name         String? // ? mean this field is optional and can be null
  account      Account?
  session      Session?
  applications Application[]
  createdAt    DateTime      @default(now())
}

model Application {
  // A single application by a user
  id        String   @id
  userId    String   @unique
  jobTitle  String
  company   String
  status    Status   @default(APPLIED)
  link      String?
  user      User     @relation(fields: [userId], references: [id])
  appliedAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Status {
  APPLIED
  INTERVIEW
  OFFERED
  REJECTED
}

model Account {
  // this needs more variables realted to session etc. e.g expiry, token
  id          String @id @default(cuid()) // cuid = Collision-Resistant Unique Identifier
  userId      String @unique
  accountName String @unique
  user        User   @relation(fields: [userId], references: [id])
}

model Session {
  // needs more variables when i sort out the authentication process
  id     String @id @default(cuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model VerificationToken {
  // needs more variables when i sort out the authentication process
  identifier String
  token      String @unique
}
